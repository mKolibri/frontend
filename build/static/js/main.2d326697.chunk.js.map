{"version":3,"sources":["components/profile/home/home.module.css","components/profile/tables/tables.module.css","components/login/login.module.css","components/registry/registry.module.css","components/login/login.jsx","components/registry/registry.jsx","components/profile/home/home.jsx","components/profile/tables/tables.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Login","props","handleSubmit","e","a","preventDefault","user","state","fetch","method","headers","body","JSON","stringify","result","json","content","status","localStorage","setItem","token","userID","history","push","alert","message","mail","password","handleChange","bind","target","id","this","setState","value","className","style","App","Form","form","onSubmit","Container","Row","Col","header","Input","type","name","placeholder","onChange","required","Button","to","Component","Registry","curentUser","surname","age","then","msg","md","Home","logOut","toHome","toTables","getItem","sidenav","Toggle","Nav","defaultSelected","eventKey","onClick","logOutButton","container","rightConteiner","text","Tab","Table","dark","scope","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d326697.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logOutButton\":\"home_logOutButton__3SyVj\",\"sidenav\":\"home_sidenav__2ZqVy\",\"container\":\"home_container__2GixD\",\"rightConteiner\":\"home_rightConteiner__1M9WI\",\"text\":\"home_text__LMCg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logOutButton\":\"tables_logOutButton__2IRIF\",\"sidenav\":\"tables_sidenav__hC3_A\",\"container\":\"tables_container__1kVY3\",\"rightConteiner\":\"tables_rightConteiner__1IJDA\",\"text\":\"tables_text__1AJWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"login_App__1oirh\",\"form\":\"login_form__11Qp4\",\"header\":\"login_header__3e9Mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"registry_App__343jm\",\"form\":\"registry_form__3i7yU\",\"header\":\"registry_header__nj8Xu\"};","import { Container, Col, Form, Row, Input, Button } from 'reactstrap';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './login.module.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mail: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        if (e.target.id === 'mail') {\n            this.setState({ mail: e.target.value });\n        } else if (e.target.id === 'password') {\n            this.setState({ password: e.target.value });\n        }\n    }\n\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        const user  = this.state;\n        try {\n            const result = await fetch('http://localhost:10000/login', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify( user)\n            });\n            \n            const content = await result.json();\n            if (200 === result.status) {\n                localStorage.setItem('token', content.token);\n                localStorage.setItem('userID', content.userID);\n                this.props.history.push('/home');\n            } else {\n                alert(content.message);\n            }\n        } catch (error) {\n            alert(`Error with server`);\n        }   \n    }\n\n    render() {\n        return (\n            <div className={style.App} >\n                <Form className={style.form} onSubmit={this.handleSubmit}>\n                    <Container>\n                        <Row>\n                            <Col >\n                                <h2 className={style.header}>LOG IN</h2>\n                            </Col>\n                            <Col >\n                                <Input type=\"mail\" name=\"mail\" id=\"mail\"\n                                    placeholder=\"mail-address\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n                            <Col>\n                                <Input type=\"password\" name=\"password\" id=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n                                <Button className=\"loginButton\" \n                                    onSubmit={this.onSubmit}> Log in </Button>\n                        </Row>\n                        <Row>\n                            <Col><p>--- OR ---</p></Col>\n                                <Link to=\"/registry\" className=\"comp-class\">\n                                    <Button className=\"registryButton\"> Regisration </Button>\n                                </Link>                         \n                        </Row>\n                    </Container>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Container, Col, Form, Row, Input, Button} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport style from './registry.module.css';\n\nclass Registry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            surname: '',\n            mail: '',\n            age:'',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const elementId = e.target.id;\n        switch (elementId) {\n            case 'name': this.setState({ name: e.target.value }); break;\n            case 'surname': this.setState({ surname: e.target.value }); break;\n            case 'mail': this.setState({ mail: e.target.value }); break;\n            case 'password': this.setState({ password: e.target.value }); break;\n            case 'age': this.setState({ age: e.target.value }); break;\n            default: break;\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const curentUser ={\n            \"name\": this.state.name,\n            \"surname\": this.state.surname,\n            \"password\": this.state.password,\n            \"mail\": this.state.mail,\n            \"age\": this.state.age,\n        };\n        \n        fetch('http://localhost:10000/registration', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body:  JSON.stringify(curentUser)\n        }).then(async (result) => {\n            const content = await result.json();\n            if (200 === result.status) {\n                localStorage.setItem('token', content.token);\n                localStorage.setItem('userID', content.userID);\n                this.props.history.push('/home');\n                alert(\"OK\");\n            } else {\n                alert(\"ERROR\");\n                if (content[0]) {\n                    alert(content[0].msg);\n                } else {\n                    alert(content.message);\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className={style.App} >\n                <Form className={style.form} onSubmit={this.handleSubmit}>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h1 className={style.header}> REGISTRATION </h1>\n                            </Col>\n                            <Col md=\"12\">\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\"\n                                onChange={this.handleChange} required />\n                            </Col>\n                            <Col md=\"12\">\n                                <Input type=\"text\" name=\"surname\" id=\"surname\" \n                                    placeholder=\"Surname\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n                            <Col md=\"12\">\n                                <Input type=\"number\" name=\"age\" id=\"age\" placeholder=\"Age\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n                            <Col md=\"12\">\n                                <Input type=\"mail\" name=\"mail\" id=\"mail\" placeholder=\"mail\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n\n                            <Col md=\"12\">\n                                <Input type=\"password\" name=\"password\"\n                                    id=\"password\" placeholder=\"Password\"\n                                    onChange={this.handleChange} required />\n                            </Col>\n                            <Col >\n                                <Button to=\"/\" onSubmit={this.handleSubmit}> Sign up </Button>\n                            </Col>\n                            <Col><p>--- OR ---</p></Col>\n                            <Link to=\"/\" className=\"comp-class\">\n                                <Button>Log in</Button>\n                            </Link>\n                        </Row>\n                    </Container>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Registry;","import React, { Component } from 'react';\nimport SideNav, { NavItem} from '@trendmicro/react-sidenav';\nimport { Button } from 'reactstrap';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport style from './home.module.css';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: localStorage.getItem('userID'),\n            token : localStorage.getItem('token')\n        };\n    }\n\n    async componentDidMount() {\n        const userID = this.state.userID;\n        const token = this.state.token;\n\n        try {\n            const result = await fetch(`http://localhost:10000/user?userID=${userID}&token=${token}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            });\n            \n            const content = await result.json();\n            if (200 === result.status) {\n                this.setState({name : content.name});\n                this.setState({surname : content.surname});\n                this.setState({age : content.age});\n                this.setState({mail: content.mail});\n            } else {\n                alert(content.message);\n            }\n        } catch (error) {\n            alert(`Error: ${error.message}`);\n        }   \n    }\n\n    logOut = () => {\n        localStorage.setItem('token', '');\n        localStorage.setItem('userID', '');\n        this.props.history.push('/');\n    }\n\n    toHome = () => {\n        this.props.history.push('/home');\n    }\n\n    toTables = () => {\n        this.props.history.push('/tables');\n    }\n    \n    render() {\n        return (\n            <BrowserRouter>\n                <SideNav className={style.sidenav} >\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"tables\" >\n                        <NavItem eventKey=\"tables\">\n                            <Link to=\"/home\" onClick={this.toHome}>\n                                Home\n                            </Link>\n                            <Link to=\"/tables\" onClick={this.toTables}>\n                                Tables\n                            </Link>\n                            <Link to=\"/\" onClick={this.logOut}>\n                                <Button className={style.logOutButton}> Log out </Button>\n                            </Link>\n                        </NavItem>\n                    </SideNav.Nav>\n                </SideNav>\n                <div className={style.container}>\n                    <div className={style.rightConteiner}>\n                        <h3 className={style.text}> Name : {this.state.name} </h3>\n                        <h3 className={style.text}> Surname : {this.state.surname} </h3>\n                        <h3 className={style.text}> Age : {this.state.age} </h3>\n                        <h3 className={style.text}> Mail : {this.state.mail} </h3>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport SideNav from '@trendmicro/react-sidenav';\nimport { Button, Table } from 'reactstrap';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { BrowserRouter, Link } from 'react-router-dom'\nimport style from './tables.module.css';\n\nclass Tab extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: localStorage.getItem('userID'),\n            token : localStorage.getItem('token')\n        };\n    }\n\n    async componentDidMount() {\n        const userID = this.state.userID;\n        const token = this.state.token;\n\n        try {\n            const result = await fetch(`http://localhost:10000/user?userID=${userID}&token=${token}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            });\n            \n            const content = await result.json();\n            if (200 === result.status) {\n                this.setState({name : content.name});\n                this.setState({surname : content.surname});\n                this.setState({age : content.age});\n                this.setState({mail: content.mail});\n            } else {\n                alert(content.message);\n            }\n        } catch (error) {\n            alert(`Error: ${error.message}`);\n        }   \n    }\n\n    logOut = () => {\n        localStorage.setItem('token', '');\n        localStorage.setItem('userID', '');\n        this.props.history.push('/');\n    }\n\n    toHome = () => {\n        this.props.history.push('/home');\n    }\n\n    toTables = () => {\n        this.props.history.push('/tables');\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <SideNav className={style.sidenav} >\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"tables\" >\n                        <Link to=\"/home\" onClick={this.toHome}>\n                            Home\n                        </Link>\n                        <Link to=\"/tables\" onClick={this.toTables}>\n                            Tables\n                        </Link>\n                        <Link to=\"/\" onClick={this.logOut}>\n                            <Button className={style.logOutButton}> Log out </Button>\n                        </Link>\n                    </SideNav.Nav>\n                </SideNav>\n                <div className={style.container}>\n                    <div className={style.rightConteiner}>\n                        <h3 className={style.text}> Name : {this.state.name} </h3>\n                        <h3 className={style.text}> Surname : {this.state.surname} </h3>\n                        <h3 className={style.text}> Age : {this.state.age} </h3>\n                        <h3 className={style.text}> Mail : {this.state.mail} </h3>\n                    </div>\n                    <Table dark>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th></th>\n                                <th>Table Name</th>\n                                <th>Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td></td>\n                                <td>Otto</td>\n                                <td>@mdo</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Tab;","import './App.css';\nimport React, { Component } from 'react';\nimport Login from './components/login/login';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Registry from './components/registry/registry';\nimport Home from './components/profile/home/home';\nimport Tab from './components/profile/tables/tables';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <Route path='/' exact component={Login} />\n            <Route path='/registry' exact component={Registry} />\n            <Route path='/home' exact component={Home} />\n            <Route path='/tables' exact component={Tab} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App/>, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}